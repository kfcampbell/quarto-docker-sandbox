name: Build and push multi-arch image on separate runners

permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      commit_sha:
        description: 'Commit SHA to build the image from'
        required: false
      image_tag:
        description: 'Desired Docker image tag'
        required: false
        default: 'latest'

jobs:
  set-vars:
    name: Determine commit/tag
    runs-on: ubuntu-latest
    outputs:
      commit_sha: ${{ steps.vars.outputs.commit_sha }}
      image_tag: ${{ steps.vars.outputs.image_tag }}
      short_sha: ${{ steps.vars.outputs.short_sha }}

    steps:
      - name: Compute environment variables
        id: vars
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            if [ -n "${{ github.event.inputs.commit_sha }}" ]; then
              COMMIT_SHA="${{ github.event.inputs.commit_sha }}"
            else
              COMMIT_SHA="${{ github.sha }}"
            fi
          else
            COMMIT_SHA="${{ github.sha }}"
          fi

          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            if [ -n "${{ github.event.inputs.image_tag }}" ]; then
              IMAGE_TAG="${{ github.event.inputs.image_tag }}"
            else
              IMAGE_TAG="latest"
            fi
          else
            IMAGE_TAG="latest"
          fi

          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)

          echo "Commit SHA: $COMMIT_SHA"
          echo "Image Tag:  $IMAGE_TAG"
          echo "Short SHA:  $SHORT_SHA"

          echo "commit_sha=$COMMIT_SHA" >> $GITHUB_OUTPUT
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "short_sha=$SHORT_SHA" >> $GITHUB_OUTPUT

  build-amd64:
    name: Build amd64
    runs-on: ubuntu-latest
    needs: set-vars

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.set-vars.outputs.commit_sha }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build amd64 image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ needs.set-vars.outputs.image_tag }}-amd64
            ghcr.io/${{ github.repository }}:${{ needs.set-vars.outputs.short_sha }}-amd64
          build-args: |
            ARCH=amd64

  build-arm64:
    name: Build arm64
    runs-on: ubuntu-24.04-arm
    needs: set-vars

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.set-vars.outputs.commit_sha }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build arm64 image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ needs.set-vars.outputs.image_tag }}-arm64
            ghcr.io/${{ github.repository }}:${{ needs.set-vars.outputs.short_sha }}-arm64
          build-args: |
            ARCH=arm64

  create-manifest:
    name: Create Multi-Arch Manifests
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest

    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge multi-arch for IMAGE_TAG
        run: |
          IMAGE_TAG=${{ needs.set-vars.outputs.image_tag }}
          docker manifest create ghcr.io/${{ github.repository }}:${IMAGE_TAG} \
            --amend ghcr.io/${{ github.repository }}:${IMAGE_TAG}-amd64 \
            --amend ghcr.io/${{ github.repository }}:${IMAGE_TAG}-arm64

          docker manifest push ghcr.io/${{ github.repository }}:${IMAGE_TAG}

      - name: Merge multi-arch for SHORT_SHA
        run: |
          SHORT_SHA=${{ needs.set-vars.outputs.short_sha }}
          docker manifest create ghcr.io/${{ github.repository }}:${SHORT_SHA} \
            --amend ghcr.io/${{ github.repository }}:${SHORT_SHA}-amd64 \
            --amend ghcr.io/${{ github.repository }}:${SHORT_SHA}-arm64

          docker manifest push ghcr.io/${{ github.repository }}:${SHORT_SHA}
