name: Build and Push Docker Image
permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      commit_sha:
        description: 'Commit SHA to build the image from'
        required: false
      image_tag:
        description: 'Desired Docker image tag'
        required: false
        default: 'latest'

jobs:
  build-and-push:
    strategy:
      matrix:
        include:
          - arch: amd64
            platform: linux/amd64
            runs-on: ubuntu-latest     # amd64 runner
          - arch: arm64
            platform: linux/arm64
            runs-on: ubuntu-24.04-arm  # arm64 runner
    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Set COMMIT_SHA
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            if [ -n "${{ github.event.inputs.commit_sha }}" ]; then
              COMMIT_SHA="${{ github.event.inputs.commit_sha }}"
            else
              COMMIT_SHA="${{ github.sha }}"
            fi
          else
            COMMIT_SHA="${{ github.sha }}"
          fi
          echo "COMMIT_SHA=$COMMIT_SHA" >> $GITHUB_ENV

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ env.COMMIT_SHA }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Short SHA
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Set ARCH
        run: echo "ARCH=${{ matrix.arch }}" >> $GITHUB_ENV

      - name: Set IMAGE_TAG
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            if [ -n "${{ github.event.inputs.image_tag }}" ]; then
              IMAGE_TAG="${{ github.event.inputs.image_tag }}"
            else
              IMAGE_TAG="latest"
            fi
          else
            IMAGE_TAG="latest"
          fi
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.IMAGE_TAG }}
            ghcr.io/${{ github.repository }}:${{ env.SHORT_SHA }}
          build-args: |
            ARCH=${{ env.ARCH }}
