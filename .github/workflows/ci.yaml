name: Build and Push Docker Image
permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      commit_sha:
        description: 'Commit SHA to build the image from'
        required: false
      image_tag:
        description: 'Desired Docker image tag'
        required: false
        default: 'latest'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]

    steps:
      - name: Determine commit and image tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            if [ -n "${{ github.event.inputs.commit_sha }}" ]; then
              echo "COMMIT_SHA=${{ github.event.inputs.commit_sha }}" >> $GITHUB_ENV
            else
              echo "COMMIT_SHA=${{ github.sha }}" >> $GITHUB_ENV
            fi
          else
            echo "COMMIT_SHA=${{ github.sha }}" >> $GITHUB_ENV
          fi

          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            if [ -n "${{ github.event.inputs.image_tag }}" ]; then
              echo "IMAGE_TAG=${{ github.event.inputs.image_tag }}" >> $GITHUB_ENV
            else
              echo "IMAGE_TAG=latest" >> $GITHUB_ENV
            fi
          else
            echo "IMAGE_TAG=latest" >> $GITHUB_ENV
          fi

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ env.COMMIT_SHA }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Architecture-Specific Image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ env.IMAGE_TAG }}-${{ matrix.platform }}

  create-manifest:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and Push Multi-Arch Manifest
        run: |
          docker manifest create ghcr.io/${{ github.repository }}:${{ env.IMAGE_TAG }} \
            --amend ghcr.io/${{ github.repository }}:${{ env.IMAGE_TAG }}-linux/amd64 \
            --amend ghcr.io/${{ github.repository }}:${{ env.IMAGE_TAG }}-linux/arm64

          docker manifest push ghcr.io/${{ github.repository }}:${{ env.IMAGE_TAG }}
